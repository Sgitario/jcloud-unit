<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>io.jcloud</groupId>
  <artifactId>jcloud-parent</artifactId>
  <version>0.0.0-SNAPSHOT</version>
  <packaging>pom</packaging>
  <name>jCloud - Parent</name>
  <description>jCloud - Cloud native test framework</description>
  <licenses>
    <license>
      <name>The Apache License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
    </license>
  </licenses>
  <developers>
    <developer>
      <id>snowdrop</id>
      <name>Snowdrop</name>
      <organization>Snowdrop</organization>
      <url>https://github.com/snowdrop</url>
    </developer>
  </developers>
  <scm>
    <connection>scm:git:git@github.com:snowdrop/jcloud-unit.git</connection>
    <developerConnection>scm:git:git@github.com:snowdrop/jcloud-unit.git</developerConnection>
    <url>https://github.com/snowdrop/jcloud-unit</url>
    <tag>HEAD</tag>
  </scm>
  <url>https://github.com/snowdrop/jcloud-unit/</url>
  <properties>
    <compiler-plugin.version>3.10.0</compiler-plugin.version>
    <source-plugin.version>3.2.1</source-plugin.version>
    <javadoc-plugin.version>3.3.2</javadoc-plugin.version>
    <maven.compiler.parameters>true</maven.compiler.parameters>
    <maven.compiler.source>11</maven.compiler.source>
    <maven.compiler.target>11</maven.compiler.target>
    <maven.javadoc.failOnError>false</maven.javadoc.failOnError>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <surefire-plugin.version>3.0.0-M5</surefire-plugin.version>
    <failsafe-plugin.version>3.0.0-M5</failsafe-plugin.version>
    <jacoco-maven-plugin.version>0.8.7</jacoco-maven-plugin.version>
    <maven-checkstyle-plugin.version>3.1.2</maven-checkstyle-plugin.version>
    <formatter-maven-plugin.version>2.17.1</formatter-maven-plugin.version>
    <impsort-maven-plugin.version>1.6.2</impsort-maven-plugin.version>
    <nexus-staging-maven-plugin.version>1.6.12</nexus-staging-maven-plugin.version>
    <!-- Declared Dependencies -->
    <junit.version>5.8.2</junit.version>
    <rest-assured.version>4.5.1</rest-assured.version>
    <awaitility.version>4.2.0</awaitility.version>
    <slf4j-jboss-logmanager.version>1.1.0.Final</slf4j-jboss-logmanager.version>
    <jboss-logmanager.version>1.0.9</jboss-logmanager.version>
    <apache.commons-io.version>2.11.0</apache.commons-io.version>
    <jakarta.inject-api.version>1.0</jakarta.inject-api.version>
    <testcontainers.version>1.16.3</testcontainers.version>
    <kubernetes-client.version>5.12.1</kubernetes-client.version>
    <jackson-annotations.version>2.13.2</jackson-annotations.version>
    <docker-java.version>3.2.13</docker-java.version>
    <!-- Format Settings -->
    <src.format.goal>format</src.format.goal>
    <src.sort.goal>sort</src.sort.goal>
    <checkstyle.version>10.0</checkstyle.version>
    <!-- Code Coverage Properties-->
    <jacoco.agent.argLine/>
    <!-- Samples -->
    <samples.container-image.registry>server.io</samples.container-image.registry>
    <!-- Testing -->
    <keycloak-authz-client.version>17.0.0</keycloak-authz-client.version>
    <include.tests>**/*IT.java</include.tests>
    <exclude.openshift.tests>**/OpenShift*IT.java</exclude.openshift.tests>
    <exclude.kubernetes.tests>**/Kubernetes*IT.java</exclude.kubernetes.tests>
  </properties>
  <distributionManagement>
    <snapshotRepository>
      <id>ossrh</id>
      <url>https://oss.sonatype.org/content/repositories/snapshots/</url>
    </snapshotRepository>
    <repository>
      <id>oss.sonatype</id>
      <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
    </repository>
  </distributionManagement>
  <modules>
    <module>jcloud-unit</module>
  </modules>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>io.jcloud</groupId>
        <artifactId>jcloud</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.rest-assured</groupId>
        <artifactId>rest-assured</artifactId>
        <version>${rest-assured.version}</version>
      </dependency>
      <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter-api</artifactId>
        <version>${junit.version}</version>
      </dependency>
      <dependency>
        <groupId>org.awaitility</groupId>
        <artifactId>awaitility</artifactId>
        <version>${awaitility.version}</version>
      </dependency>
      <dependency>
        <groupId>org.jboss.slf4j</groupId>
        <artifactId>slf4j-jboss-logmanager</artifactId>
        <version>${slf4j-jboss-logmanager.version}</version>
      </dependency>
      <dependency>
        <groupId>org.jboss.logmanager</groupId>
        <artifactId>jboss-logmanager-embedded</artifactId>
        <version>${jboss-logmanager.version}</version>
      </dependency>
      <dependency>
        <groupId>commons-io</groupId>
        <artifactId>commons-io</artifactId>
        <version>${apache.commons-io.version}</version>
      </dependency>
      <dependency>
        <groupId>jakarta.inject</groupId>
        <artifactId>jakarta.inject-api</artifactId>
        <version>${jakarta.inject-api.version}</version>
      </dependency>
      <dependency>
        <groupId>org.testcontainers</groupId>
        <artifactId>testcontainers</artifactId>
        <version>${testcontainers.version}</version>
      </dependency>
      <dependency>
        <groupId>com.github.docker-java</groupId>
        <artifactId>docker-java-transport-zerodep</artifactId>
        <version>${docker-java.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>kubernetes-client</artifactId>
        <version>${kubernetes-client.version}</version>
      </dependency>
      <!-- SMELL: This version is required by Fabric8 dependency... -->
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-annotations</artifactId>
        <version>${jackson-annotations.version}</version>
      </dependency>

      <!-- Test dependencies -->
      <dependency>
        <groupId>org.keycloak</groupId>
        <artifactId>keycloak-authz-client</artifactId>
        <scope>test</scope>
        <version>${keycloak-authz-client.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${compiler-plugin.version}</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <version>${source-plugin.version}</version>
        <executions>
          <execution>
            <id>attach-sources</id>
            <phase>verify</phase>
            <goals>
              <goal>jar-no-fork</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>net.revelc.code.formatter</groupId>
        <artifactId>formatter-maven-plugin</artifactId>
        <version>${formatter-maven-plugin.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>${src.format.goal}</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <configFile>${project.basedir}/../coding/ide-format.xml</configFile>
          <lineEnding>LF</lineEnding>
        </configuration>
      </plugin>
      <plugin>
        <groupId>net.revelc.code</groupId>
        <artifactId>impsort-maven-plugin</artifactId>
        <version>${impsort-maven-plugin.version}</version>
        <configuration>
          <!-- store outside of target to speed up formatting when mvn clean is used -->
          <cachedir>.cache</cachedir>
          <groups>java.,javax.,org.,com.</groups>
          <staticGroups>*</staticGroups>
          <removeUnused>true</removeUnused>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>${src.sort.goal}</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>${maven-checkstyle-plugin.version}</version>
        <configuration>
          <configLocation>coding/checkstyle.xml</configLocation>
          <encoding>UTF-8</encoding>
          <consoleOutput>true</consoleOutput>
          <failsOnError>true</failsOnError>
          <linkXRef>true</linkXRef>
        </configuration>
        <executions>
          <execution>
            <id>validate</id>
            <phase>validate</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>com.puppycrawl.tools</groupId>
            <artifactId>checkstyle</artifactId>
            <version>${checkstyle.version}</version>
          </dependency>
        </dependencies>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${surefire-plugin.version}</version>
        <configuration>
          <argLine>${jacoco.agent.argLine}</argLine>
          <failIfNoTests>false</failIfNoTests>
          <includes>
            <include>*Test.java</include>
          </includes>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>${failsafe-plugin.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
            <configuration>
              <argLine>${jacoco.agent.argLine}</argLine>
              <excludedGroups>${exclude.tests.with.tags}</excludedGroups>
              <failIfNoTests>false</failIfNoTests>
              <includes>
                <include>${include.tests}</include>
              </includes>
              <excludes>
                <exclude>${exclude.openshift.tests}</exclude>
                <exclude>${exclude.kubernetes.tests}</exclude>
              </excludes>
              <systemProperties>
                <!-- Samples mapping -->
                <sample.quarkus-rest.image>${samples.container-image.registry}/test/quarkus-rest:latest
                </sample.quarkus-rest.image>
                <sample.quarkus-secured.image>${samples.container-image.registry}/test/quarkus-secured:latest
                </sample.quarkus-secured.image>
              </systemProperties>
            </configuration>
          </execution>
        </executions>
        <configuration>
          <trimStackTrace>false</trimStackTrace>
        </configuration>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <!-- You need to be connected to a Kubernetes instance to activate
          this profile! -->
      <id>kubernetes</id>
      <activation>
        <property>
          <name>kubernetes</name>
        </property>
      </activation>
      <properties>
        <include.tests>**/Kubernetes*IT.java</include.tests>
        <exclude.kubernetes.tests>no</exclude.kubernetes.tests>
      </properties>
    </profile>
    <profile>
      <id>validate-format</id>
      <activation>
        <property>
          <name>validate-format</name>
        </property>
      </activation>
      <properties>
        <src.format.goal>validate</src.format.goal>
        <src.sort.goal>check</src.sort.goal>
      </properties>
    </profile>
    <!-- This profile generates jacoco coverage files. -->
    <profile>
      <id>coverage</id>
      <activation>
        <property>
          <name>coverage</name>
        </property>
      </activation>
      <properties>
        <!--suppress UnresolvedMavenProperty to ignore warnings in idea-->
        <jacoco.agent.argLine>${jacoco.generated.agent.argLine}</jacoco.agent.argLine>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>${jacoco-maven-plugin.version}</version>
            <executions>
              <execution>
                <id>agent</id>
                <goals>
                  <goal>prepare-agent</goal>
                </goals>
                <configuration>
                  <includes>
                    <include>io.jcloud*</include>
                  </includes>
                  <propertyName>jacoco.generated.agent.argLine</propertyName>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>release</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-release-plugin</artifactId>
            <configuration>
              <autoVersionSubmodules>true</autoVersionSubmodules>
              <tagNameFormat>@{project.version}</tagNameFormat>
              <pushChanges>false</pushChanges>
              <localCheckout>true</localCheckout>
              <remoteTagging>false</remoteTagging>
              <arguments>-DskipTests=true</arguments>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <configuration>
              <gpgArguments>
                <arg>--pinentry-mode</arg>
                <arg>loopback</arg>
              </gpgArguments>
            </configuration>
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <phase>verify</phase>
                <goals>
                  <goal>sign</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
            <version>${javadoc-plugin.version}</version>
            <executions>
              <execution>
                <id>attach-javadocs</id>
                <goals>
                  <goal>jar</goal>
                </goals>
              </execution>
              <execution>
                <phase>package</phase>
                <goals>
                  <goal>jar</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.sonatype.plugins</groupId>
            <artifactId>nexus-staging-maven-plugin</artifactId>
            <version>${nexus.version}</version>
            <extensions>true</extensions>
            <configuration>
              <nexusUrl>https://s01.oss.sonatype.org/</nexusUrl>
              <serverId>ossrh</serverId>
              <autoReleaseAfterClose>true</autoReleaseAfterClose>
              <stagingProgressTimeoutMinutes>60</stagingProgressTimeoutMinutes>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
