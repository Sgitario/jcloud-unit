name: "Pull Request Build"
on:
  - pull_request
jobs:
  validate-format:
    name: Validate format
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ 11 ]
    steps:
      - uses: actions/checkout@v1
      - uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Install JDK {{ matrix.java }}
        uses: joschi/setup-jdk@e87a7cec853d2dd7066adf837fe12bf0f3d45e52
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}
          check-latest: true
      - name: Build with Maven
        run: |
          mvn -V -B -s .github/mvn-settings.xml verify -Dvalidate-format -DskipTests -DskipITs
  linux-build-jvm:
    name: PR - Linux - JVM build
    runs-on: ubuntu-latest
    needs: validate-format
    strategy:
      matrix:
        java: [ 11 ]
    steps:
      - uses: actions/checkout@v1
      - uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Reclaim Disk Space
        run: .github/ci-prerequisites.sh
      - name: Kubernetes KinD Cluster
        uses: container-tools/kind-action@v1
        with:
          version: v0.11.1
          registry: true
      - name: Install JDK {{ matrix.java }}
        uses: joschi/setup-jdk@e87a7cec853d2dd7066adf837fe12bf0f3d45e52
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}
          check-latest: true
      - name: Generate Samples images
        run: |
          cd samples
          mvn clean install -Dsamples.container-image.registry=$KIND_REGISTRY -Dsamples.container-image.push=true
      - name: Build
        run: |
          mvn -s .github/mvn-settings.xml clean install -Pframework -Dexamples -Dcoverage -Dvalidate-format \
            -Dsamples.container-image.registry=$KIND_REGISTRY \
            -Dts.global.image.registry=$KIND_REGISTRY \
            -Dexclude.kubernetes.tests=no
      - name: Zip Artifacts
        run: |
          zip -R artifacts-linux-jvm${{ matrix.java }}.zip '*-reports/*'
      - name: Archive artifacts
        uses: actions/upload-artifact@v1
        with:
          name: ci-artifacts
          path: artifacts-linux-jvm${{ matrix.java }}.zip
  windows-build-jvm:
    name: PR - Windows - JVM build
    runs-on: windows-latest
    needs: validate-format
    strategy:
      matrix:
        java: [ 11 ]
    steps:
      - uses: actions/checkout@v1
      - uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Install JDK {{ matrix.java }}
        uses: joschi/setup-jdk@e87a7cec853d2dd7066adf837fe12bf0f3d45e52
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}
          check-latest: true
      - name: Build
        shell: bash
        run: |
          mvn -s .github/mvn-settings.xml clean install -Pframework -Dexamples -Dexclude.tests.with.tags=containers,native
      - name: Zip Artifacts
        shell: bash
        if: failure()
        run: |
          # Disambiguate windows find from cygwin find
          /usr/bin/find . -name '*-reports/*' -type d | tar -czf artifacts-windows-jvm${{ matrix.java }}.tar -T -
      - name: Archive artifacts
        if: failure()
        uses: actions/upload-artifact@v1
        with:
          name: ci-artifacts
          path: artifacts-windows-jvm${{ matrix.java }}.tar